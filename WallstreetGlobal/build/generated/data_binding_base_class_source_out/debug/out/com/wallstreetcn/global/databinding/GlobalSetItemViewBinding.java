// Generated by view binder compiler. Do not edit!
package com.wallstreetcn.global.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.rm.rmswitch.RMSwitch;
import com.wallstreetcn.baseui.widget.CustomTextView;
import com.wallstreetcn.global.R;
import com.wallstreetcn.imageloader.WscnImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class GlobalSetItemViewBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageView arrow;

  @NonNull
  public final ImageView checked;

  @NonNull
  public final WscnImageView imageLeft;

  @NonNull
  public final ImageView redDot;

  @NonNull
  public final RMSwitch toggle;

  @NonNull
  public final CustomTextView tvLeft;

  @NonNull
  public final CustomTextView tvLeftDes;

  @NonNull
  public final CustomTextView tvRight;

  private GlobalSetItemViewBinding(@NonNull RelativeLayout rootView, @NonNull ImageView arrow,
      @NonNull ImageView checked, @NonNull WscnImageView imageLeft, @NonNull ImageView redDot,
      @NonNull RMSwitch toggle, @NonNull CustomTextView tvLeft, @NonNull CustomTextView tvLeftDes,
      @NonNull CustomTextView tvRight) {
    this.rootView = rootView;
    this.arrow = arrow;
    this.checked = checked;
    this.imageLeft = imageLeft;
    this.redDot = redDot;
    this.toggle = toggle;
    this.tvLeft = tvLeft;
    this.tvLeftDes = tvLeftDes;
    this.tvRight = tvRight;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static GlobalSetItemViewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static GlobalSetItemViewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.global_set_item_view, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static GlobalSetItemViewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.arrow;
      ImageView arrow = ViewBindings.findChildViewById(rootView, id);
      if (arrow == null) {
        break missingId;
      }

      id = R.id.checked;
      ImageView checked = ViewBindings.findChildViewById(rootView, id);
      if (checked == null) {
        break missingId;
      }

      id = R.id.imageLeft;
      WscnImageView imageLeft = ViewBindings.findChildViewById(rootView, id);
      if (imageLeft == null) {
        break missingId;
      }

      id = R.id.redDot;
      ImageView redDot = ViewBindings.findChildViewById(rootView, id);
      if (redDot == null) {
        break missingId;
      }

      id = R.id.toggle;
      RMSwitch toggle = ViewBindings.findChildViewById(rootView, id);
      if (toggle == null) {
        break missingId;
      }

      id = R.id.tvLeft;
      CustomTextView tvLeft = ViewBindings.findChildViewById(rootView, id);
      if (tvLeft == null) {
        break missingId;
      }

      id = R.id.tvLeftDes;
      CustomTextView tvLeftDes = ViewBindings.findChildViewById(rootView, id);
      if (tvLeftDes == null) {
        break missingId;
      }

      id = R.id.tvRight;
      CustomTextView tvRight = ViewBindings.findChildViewById(rootView, id);
      if (tvRight == null) {
        break missingId;
      }

      return new GlobalSetItemViewBinding((RelativeLayout) rootView, arrow, checked, imageLeft,
          redDot, toggle, tvLeft, tvLeftDes, tvRight);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
